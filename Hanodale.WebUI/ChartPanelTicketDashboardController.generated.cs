// <auto-generated />
// This file was generated by a T4 template.
// Don't change it directly as your change would get overwritten.  Instead, make changes
// to the .tt file (i.e. the T4 template) and save it to regenerate this file.

// Make sure the compiler doesn't complain about missing Xml comments
#pragma warning disable 1591
#region T4MVC

using System;
using System.Diagnostics;
using System.CodeDom.Compiler;
using System.Collections.Generic;
using System.Linq;
using System.Runtime.CompilerServices;
using System.Threading.Tasks;
using System.Web;
using System.Web.Hosting;
using System.Web.Mvc;
using System.Web.Mvc.Ajax;
using System.Web.Mvc.Html;
using System.Web.Routing;
using T4MVC;
namespace Hanodale.WebUI.Controllers
{
    public partial class ChartPanelTicketDashboardController
    {
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected ChartPanelTicketDashboardController(Dummy d) { }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToAction(ActionResult result)
        {
            var callInfo = result.GetT4MVCResult();
            return RedirectToRoute(callInfo.RouteValueDictionary);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToAction(Task<ActionResult> taskResult)
        {
            return RedirectToAction(taskResult.Result);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToActionPermanent(ActionResult result)
        {
            var callInfo = result.GetT4MVCResult();
            return RedirectToRoutePermanent(callInfo.RouteValueDictionary);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToActionPermanent(Task<ActionResult> taskResult)
        {
            return RedirectToActionPermanent(taskResult.Result);
        }

        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult Dashboard()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Dashboard);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult DetailDashboard()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.DetailDashboard);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult ViewMoreDetail()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.ViewMoreDetail);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult BindChartPanelTicketDashboard()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.BindChartPanelTicketDashboard);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult DrawChartDetail()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.DrawChartDetail);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.JsonResult GetStackingBarChartInfo()
        {
            return new T4MVC_System_Web_Mvc_JsonResult(Area, Name, ActionNames.GetStackingBarChartInfo);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ChartPanelTicketDashboardController Actions { get { return MVC.ChartPanelTicketDashboard; } }
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Area = "";
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Name = "ChartPanelTicketDashboard";
        [GeneratedCode("T4MVC", "2.0")]
        public const string NameConst = "ChartPanelTicketDashboard";

        static readonly ActionNamesClass s_actions = new ActionNamesClass();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionNamesClass ActionNames { get { return s_actions; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionNamesClass
        {
            public readonly string Dashboard = "Dashboard";
            public readonly string Index = "Index";
            public readonly string DetailDashboard = "DetailDashboard";
            public readonly string ViewMoreDetail = "ViewMoreDetail";
            public readonly string GetCustomSearchPanel = "GetCustomSearchPanel";
            public readonly string BindChartPanelTicketDashboard = "BindChartPanelTicketDashboard";
            public readonly string RenderAction = "RenderAction";
            public readonly string DrawChartDetail = "DrawChartDetail";
            public readonly string GetStackingBarChartInfo = "GetStackingBarChartInfo";
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionNameConstants
        {
            public const string Dashboard = "Dashboard";
            public const string Index = "Index";
            public const string DetailDashboard = "DetailDashboard";
            public const string ViewMoreDetail = "ViewMoreDetail";
            public const string GetCustomSearchPanel = "GetCustomSearchPanel";
            public const string BindChartPanelTicketDashboard = "BindChartPanelTicketDashboard";
            public const string RenderAction = "RenderAction";
            public const string DrawChartDetail = "DrawChartDetail";
            public const string GetStackingBarChartInfo = "GetStackingBarChartInfo";
        }


        static readonly ActionParamsClass_Dashboard s_params_Dashboard = new ActionParamsClass_Dashboard();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_Dashboard DashboardParams { get { return s_params_Dashboard; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_Dashboard
        {
            public readonly string dashboardBoxName = "dashboardBoxName";
        }
        static readonly ActionParamsClass_DetailDashboard s_params_DetailDashboard = new ActionParamsClass_DetailDashboard();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_DetailDashboard DetailDashboardParams { get { return s_params_DetailDashboard; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_DetailDashboard
        {
            public readonly string id = "id";
            public readonly string dashboardName = "dashboardName";
            public readonly string section = "section";
        }
        static readonly ActionParamsClass_ViewMoreDetail s_params_ViewMoreDetail = new ActionParamsClass_ViewMoreDetail();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_ViewMoreDetail ViewMoreDetailParams { get { return s_params_ViewMoreDetail; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_ViewMoreDetail
        {
            public readonly string id = "id";
            public readonly string dashboardName = "dashboardName";
            public readonly string section = "section";
        }
        static readonly ActionParamsClass_BindChartPanelTicketDashboard s_params_BindChartPanelTicketDashboard = new ActionParamsClass_BindChartPanelTicketDashboard();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_BindChartPanelTicketDashboard BindChartPanelTicketDashboardParams { get { return s_params_BindChartPanelTicketDashboard; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_BindChartPanelTicketDashboard
        {
            public readonly string param = "param";
            public readonly string myKey = "myKey";
            public readonly string recordId = "recordId";
        }
        static readonly ActionParamsClass_DrawChartDetail s_params_DrawChartDetail = new ActionParamsClass_DrawChartDetail();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_DrawChartDetail DrawChartDetailParams { get { return s_params_DrawChartDetail; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_DrawChartDetail
        {
            public readonly string startDate = "startDate";
            public readonly string endDate = "endDate";
            public readonly string type = "type";
            public readonly string section = "section";
        }
        static readonly ActionParamsClass_GetStackingBarChartInfo s_params_GetStackingBarChartInfo = new ActionParamsClass_GetStackingBarChartInfo();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_GetStackingBarChartInfo GetStackingBarChartInfoParams { get { return s_params_GetStackingBarChartInfo; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_GetStackingBarChartInfo
        {
            public readonly string startDate = "startDate";
            public readonly string endDate = "endDate";
            public readonly string type = "type";
        }
        static readonly ViewsClass s_views = new ViewsClass();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ViewsClass Views { get { return s_views; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ViewsClass
        {
            static readonly _ViewNamesClass s_ViewNames = new _ViewNamesClass();
            public _ViewNamesClass ViewNames { get { return s_ViewNames; } }
            public class _ViewNamesClass
            {
                public readonly string _DonutHoleChart = "_DonutHoleChart";
                public readonly string _PieChart = "_PieChart";
                public readonly string _RenderAction = "_RenderAction";
                public readonly string _SearchPanel = "_SearchPanel";
                public readonly string _StackingBarChart = "_StackingBarChart";
                public readonly string _TicketDashboard = "_TicketDashboard";
                public readonly string _TicketDetail = "_TicketDetail";
                public readonly string Index = "Index";
                public readonly string TicketViewMoreDetail = "TicketViewMoreDetail";
            }
            public readonly string _DonutHoleChart = "~/Views/ChartPanelTicketDashboard/_DonutHoleChart.cshtml";
            public readonly string _PieChart = "~/Views/ChartPanelTicketDashboard/_PieChart.cshtml";
            public readonly string _RenderAction = "~/Views/ChartPanelTicketDashboard/_RenderAction.cshtml";
            public readonly string _SearchPanel = "~/Views/ChartPanelTicketDashboard/_SearchPanel.cshtml";
            public readonly string _StackingBarChart = "~/Views/ChartPanelTicketDashboard/_StackingBarChart.cshtml";
            public readonly string _TicketDashboard = "~/Views/ChartPanelTicketDashboard/_TicketDashboard.cshtml";
            public readonly string _TicketDetail = "~/Views/ChartPanelTicketDashboard/_TicketDetail.cshtml";
            public readonly string Index = "~/Views/ChartPanelTicketDashboard/Index.cshtml";
            public readonly string TicketViewMoreDetail = "~/Views/ChartPanelTicketDashboard/TicketViewMoreDetail.cshtml";
        }
    }

    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public partial class T4MVC_ChartPanelTicketDashboardController : Hanodale.WebUI.Controllers.ChartPanelTicketDashboardController
    {
        public T4MVC_ChartPanelTicketDashboardController() : base(Dummy.Instance) { }

        [NonAction]
        partial void DashboardOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, string dashboardBoxName);

        [NonAction]
        public override System.Web.Mvc.ActionResult Dashboard(string dashboardBoxName)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Dashboard);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "dashboardBoxName", dashboardBoxName);
            DashboardOverride(callInfo, dashboardBoxName);
            return callInfo;
        }

        [NonAction]
        partial void IndexOverride(T4MVC_System_Web_Mvc_ActionResult callInfo);

        [NonAction]
        public override System.Web.Mvc.ActionResult Index()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Index);
            IndexOverride(callInfo);
            return callInfo;
        }

        [NonAction]
        partial void DetailDashboardOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, string id, string dashboardName, string section);

        [NonAction]
        public override System.Web.Mvc.ActionResult DetailDashboard(string id, string dashboardName, string section)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.DetailDashboard);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "id", id);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "dashboardName", dashboardName);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "section", section);
            DetailDashboardOverride(callInfo, id, dashboardName, section);
            return callInfo;
        }

        [NonAction]
        partial void ViewMoreDetailOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, string id, string dashboardName, string section);

        [NonAction]
        public override System.Web.Mvc.ActionResult ViewMoreDetail(string id, string dashboardName, string section)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.ViewMoreDetail);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "id", id);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "dashboardName", dashboardName);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "section", section);
            ViewMoreDetailOverride(callInfo, id, dashboardName, section);
            return callInfo;
        }

        [NonAction]
        partial void GetCustomSearchPanelOverride(T4MVC_System_Web_Mvc_ActionResult callInfo);

        [NonAction]
        public override System.Web.Mvc.ActionResult GetCustomSearchPanel()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.GetCustomSearchPanel);
            GetCustomSearchPanelOverride(callInfo);
            return callInfo;
        }

        [NonAction]
        partial void BindChartPanelTicketDashboardOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, Hanodale.WebUI.Models.DataTableModel param, string myKey, string recordId);

        [NonAction]
        public override System.Web.Mvc.ActionResult BindChartPanelTicketDashboard(Hanodale.WebUI.Models.DataTableModel param, string myKey, string recordId)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.BindChartPanelTicketDashboard);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "param", param);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "myKey", myKey);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "recordId", recordId);
            BindChartPanelTicketDashboardOverride(callInfo, param, myKey, recordId);
            return callInfo;
        }

        [NonAction]
        partial void RenderActionOverride(T4MVC_System_Web_Mvc_JsonResult callInfo);

        [NonAction]
        public override System.Web.Mvc.JsonResult RenderAction()
        {
            var callInfo = new T4MVC_System_Web_Mvc_JsonResult(Area, Name, ActionNames.RenderAction);
            RenderActionOverride(callInfo);
            return callInfo;
        }

        [NonAction]
        partial void DrawChartDetailOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, string startDate, string endDate, string type, string section);

        [NonAction]
        public override System.Web.Mvc.ActionResult DrawChartDetail(string startDate, string endDate, string type, string section)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.DrawChartDetail);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "startDate", startDate);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "endDate", endDate);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "type", type);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "section", section);
            DrawChartDetailOverride(callInfo, startDate, endDate, type, section);
            return callInfo;
        }

        [NonAction]
        partial void GetStackingBarChartInfoOverride(T4MVC_System_Web_Mvc_JsonResult callInfo, string startDate, string endDate, string type);

        [NonAction]
        public override System.Web.Mvc.JsonResult GetStackingBarChartInfo(string startDate, string endDate, string type)
        {
            var callInfo = new T4MVC_System_Web_Mvc_JsonResult(Area, Name, ActionNames.GetStackingBarChartInfo);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "startDate", startDate);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "endDate", endDate);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "type", type);
            GetStackingBarChartInfoOverride(callInfo, startDate, endDate, type);
            return callInfo;
        }

    }
}

#endregion T4MVC
#pragma warning restore 1591
