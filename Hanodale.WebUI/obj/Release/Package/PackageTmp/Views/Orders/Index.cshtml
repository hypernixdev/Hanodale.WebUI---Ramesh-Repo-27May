@model Hanodale.WebUI.Models.GridViewIndexModel
@using Hanodale.Utility.Globalize
@using Hanodale.WebUI
@using System.Web.Optimization

@{
    ViewBag.Title = "Index";
    if (Request.IsAjaxRequest())
    {
        Layout = null;
    }
    else
    {
        Layout = "~/Views/Shared/_Layout.cshtml";
    }
}

<style>
    .col-md-3 {
        max-width: 20% !important;
    }
    h3, .h3 {
        font-size: 1.55rem;
    }
</style>
<!-- Hidden Variable -->
<input type="hidden" id="alert-delete" value="@Html.GetGlobalResource("MSG_CONFIRM_DELETE")">
<input type="hidden" class="mainPart" value="orders">
<input type="hidden" class="table-congif" value="orders" data-columncount="@Model.columnCount" data-button="true" data-condition="false" data-extended-event-btn="false" data-disall="true" data-auto-hide-column="true" data-export-btn="true" data-filterId="@Model.masterRecord_Id" data-dest="#d-cp-Order">
<!-- Hidden Variable -->

<div class="row-flex">
    <div class="col-xs-12 col-sm-7 col-md-7 col-lg-4 nPadding">
        <h1 class="page-title txt-color-blueDark">
            <i class="fa fa-table fa-fw "></i>
            @Html.GetGlobalResource("PAGE_HEADER_MANAGE_ORDERS")
        </h1>
    </div>
    <!-- Sync Orders Button -->
    @if (Model.accessRight.canAdd && !Model.readOnly)
    {
        <div class="col-xs-12 col-sm-5 col-md-5 col-lg-8 text-right">
            @if (ViewBag.IsSuperAdminLogin)
            {
                <button id="syncOrdersBtn" class="btn btn-primary">
                    <i class="fa fa-refresh"></i> Sync Orders
                </button>
            }

            <button id="create-orders" data-url="Orders/Create" class="btn btn-sm btn-primary" type="button">
                <i class="fa fa-plus"></i>
                @Html.GetGlobalResource("BTN_CREATE_ORDERS")
            </button>
        </div>
    }

    @*@if (Model.accessRight.canAdd && !Model.readOnly)
        {
            <div class="col-xs-12 col-sm-5 col-md-5 col-lg-8">
                <ul id="sparks" class="">
                    <li class="sparks-info">
                        <button id="create-orders" data-url="Orders/Create" class="btn btn-sm btn-primary" type="button">
                            <i class="fa fa-plus"></i>
                            @Html.GetGlobalResource("BTN_CREATE_ORDERS")
                        </button>
                    </li>
                </ul>
            </div>
        }*@
</div>
<div class="formSpliter"></div>
<div id="message" class="alert alert-success" style="display: none"></div>

<!-- starts stats -->
<div class="container">
    <div class="row">

        <div class="col-md-3 mb-3">
            <div class="card bg-warning text-white compact-card">
                <div class="card-body">
                    <div>
                        <h6 class="card-title mb-0"><i class="fa fa-folder-open"></i> Pending</h6>
                        <div style="display: flex; justify-content: space-between; align-items: center; margin-top: 8px;">
                            <span class="h3 mb-0" id="PendingCount">@ViewBag.PendingCount</span>
                            <a href="#" class="text-white status-trigger" data-stindex="Pending" style="margin-left: auto;">VIEW MORE</a>
                        </div>
                    </div>

                </div>
            </div>
        </div>
        <div class="col-md-3 mb-3">
            <div class="card bg-color-blue text-white compact-card">
                <div class="card-body">
                    <div>
                        <h6 class="card-title mb-0"><i class="fa fa-folder-open"></i> Payment</h6>
                        <div style="display: flex; justify-content: space-between; align-items: center; margin-top: 8px;">
                            <span class="h3 mb-0" id="PaymentCount">@ViewBag.PaymentCount</span>
                            <a href="#" class="text-white status-trigger" data-stindex="Payment" style="margin-left: auto;">VIEW MORE</a>
                        </div>
                    </div>

                </div>
            </div>
        </div>

        <div class="col-md-3 mb-3">
            <div class="card bg-success text-white compact-card">
                <div class="card-body">
                    <div>
                        <h6 class="card-title mb-0"><i class="fa fa-folder-open"></i> Completed</h6>
                        <div style="display: flex; justify-content: space-between; align-items: center; margin-top: 8px;">
                            <span class="h3 mb-0" id="CompletedCount">@ViewBag.CompletedCount</span>
                            <a href="#" class="text-white status-trigger" data-stindex="Completed" style="margin-left: auto;">VIEW MORE</a>
                        </div>
                    </div>

                   

                </div>
            </div>
        </div>
        <div class="col-md-3 mb-3">
            <div class="card bg-danger text-white compact-card">
                <div class="card-body">
                    <div>
                        <h6 class="card-title mb-0"><i class="fa fa-folder-open"></i>  Posting Failed</h6>
                        <div style="display: flex; justify-content: space-between; align-items: center; margin-top: 8px;">
                            <span class="h3 mb-0" id="FailedCount">@ViewBag.FailedCount</span>
                            <a href="#" class="text-white status-trigger" data-stindex="PostingFailed" style="margin-left: auto;">VIEW MORE</a>
                        </div>
                    </div>
                    

                </div>
            </div>
        </div>
        <div class="col-md-3 mb-3">
            <div class="card bg-color-orange text-white compact-card">
                <div class="card-body">
                    <div>
                        <h6 class="card-title mb-0"><i class="fa fa-folder-open"></i>  Cancelled</h6>
                        <div style="display: flex; justify-content: space-between; align-items: center; margin-top: 8px;">
                            <span class="h3 mb-0" id="CancelledCount">@ViewBag.CancelledCount</span>
                            <a href="#" class="text-white status-trigger" data-stindex="Cancelled" style="margin-left: auto;">VIEW MORE</a>
                        </div>
                    </div>
                   


                </div>
            </div>
        </div>
    </div>
    <input type="hidden" name="conditionType" id="conditionType" value="Pending" />
    <button id="updateCounts" style="display:none;" type="button" class="btn btn-sm btn-primary customFilterDatatableWithSearchBTN">@Resources.DATATABLE_SEARCH</button>
</div>
<div>

</div>
<!-- end stats -->
<!-- widget grid -->
<section id="widget-grid" class="">
    <!-- row -->
    <div class="">
        @Html.Action("GetCustomSearchPanel", "Orders")

        <!-- NEW WIDGET START -->
        <article class="col-xs-12 col-sm-12 col-md-12 col-lg-12 nPadding">

            <!-- Widget ID (each widget will need unique ID)-->
            <div class="jarviswidget jarviswidget-color-darken" id="wid-id-234"
                 data-widget-editbutton="false"
                 data-widget-deletebutton="false"
                 data-widget-colorbutton="false"
                 data-widget-sortable="false">
                <header>
                    <span class="widget-icon"><i class="fa fa-table"></i></span>

                    <h2>@Html.GetGlobalResource("ORDERS_GRID_TITLE")</h2>

                </header>

                <!-- widget div-->
                <div>
                    <!-- widget edit box -->
                    <div class="jarviswidget-editbox">
                        <!-- This area used as dropdown edit box -->
                    </div>
                    <!-- end widget edit box -->
                    <!-- widget content -->
                    <div class="widget-body no-padding">
                        <table id="dt_orders" class="table table-striped table-bordered table-hover" width="100%" data-stindex="3" data-amountcolumn="5" data-hideindex="10">
                            <thead>
                                <tr>
                                    @if (Model.lstColumn != null)
                                    {
                                        foreach (var item in Model.lstColumn)
                                        {
                                            <th data-class="@(item.isExpandable? "expand":"")" data-hide="@(item.isExpandable? "":"phone,tablet")">@Html.GetGlobalResource(item.resourceKeyName)</th>
                                        }
                                    }
                                    <th class="table-column-header" style="width: @(Model.gridViewButtonColumnWidth)px;"></th>
                                </tr>
                            </thead>
                            <tbody>
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </article>
    </div>

</section>

<style>
    .compact-card {
        height: 80px;
    }

        .compact-card .card-body {
            padding: 0.5rem 1rem;
        }

        .compact-card .card-title {
            font-size: 0.9rem;
        }

        .compact-card a {
            font-size: 0.8rem;
        }

    span.duplicate-order {
        display: none !important;
    }

    #myTabContent1 span.edit-orders {
        display: none;
    }

    #myTabContent1 span.duplicate-order {
        display: inherit !important;
    }

    span.return-order {
        display: none !important;
    }

    .Completed.hide-status-2 span.return-order, .Completed.hide-status-3 span.return-order {
        display: block !important;
    }

    .Completed.hide-status-1 span.edit-orders, .Cancelled span.edit-orders {
        display: none !important;
    }
</style>

@Scripts.Render(bundles.scripts.common_index)

<!-- Protected Script -->
<script>

    $(document).ready(function () {
        $(".status-trigger").on("click", function (e) {
            e.preventDefault();
            var stat2 = $(this).attr("data-stindex");
            $("#conditionType").val(stat2);
            $(".customFilterDatatableWithSearchBTN").trigger("click")
        });

        $(document).off("click", ".duplicate-order").on("click", ".duplicate-order", function () {
            var id = $(this).attr("data-url")
            var partName = "Orders/";
            var readOnly = false;
            var destInner = $(this).closest('div.page-content').attr("id")
            var actionUrl = partName + "CloneOrder/";
            var elem = $('.table-congif[value="' + partName + '"]');
            var destOuter = $(elem).attr('data-edit-dest');
            var businessId = $(elem).attr("data-filterId")
            var param = { id: id, businessId: businessId, readOnly: readOnly }
            if (actionUrl) {
                if (destInner) {
                    navigate.navigateElementByParameter(actionUrl, param, $("#" + destInner));
                } else if (destOuter) {
                    navigate.navigateElementByParameter(actionUrl, param, $(destOuter));
                }
                else {
                    navigate.viewByParameter(actionUrl, param);
                }
            }
        });

        $(document).off("click", ".return-order").on("click", ".return-order", function () {
            var id = $(this).attr("data-url")
            var partName = "Orders/";
            var readOnly = false;
            var destInner = $(this).closest('div.page-content').attr("id")
            var actionUrl = partName + "ReturnOrder/";
            var elem = $('.table-congif[value="' + partName + '"]');
            var destOuter = $(elem).attr('data-edit-dest');
            var businessId = $(elem).attr("data-filterId")
            var param = { id: id, businessId: businessId, readOnly: readOnly }
            if (actionUrl) {
                if (destInner) {
                    navigate.navigateElementByParameter(actionUrl, param, $("#" + destInner));
                } else if (destOuter) {
                    navigate.navigateElementByParameter(actionUrl, param, $(destOuter));
                }
                else {
                    navigate.viewByParameter(actionUrl, param);
                }
            }
        });

        $('#syncOrdersBtn').on('click', function() {
            // Disable button to prevent multiple clicks
            $(this).prop('disabled', true);

            // API call to sync Products
            var apiUrl = '@Url.Action("SyncAllOrders", "Orders")'; // Adjust the API endpoint as needed

            $.ajax({
                url: apiUrl,
                type: 'POST',
                success: function(response) {
                    if (response.success) {
                        userMessage.show("Success", 'Orders synced successfully!');
                        // Enable the button again after successful sync
                        $('#syncOrdersBtn').prop('disabled', false);
                    } else {
                        userMessage.show("Error", response.message);
                        // Enable the button again after successful sync
                        $('#syncOrdersBtn').prop('disabled', false);
                    }
                },
                error: function(xhr, status, error) {
                    userMessage.show("Error", 'An error occurred while syncing Products: ' + error);
                    // Enable the button again even if there is an error
                    $('#syncOrdersBtn').prop('disabled', false);
                }
            });
        });

    });



    $('#dt_orders').on('draw.dt', function () {
         $.ajax({
            url: '@Url.Action("UpdateCount", "Orders")', // URL to the action method
            type: 'POST',
            success: function(response) {
                // Update the elements with the new counts
                $("#PendingCount").text(response.PendingCount);
                $("#CancelledCount").text(response.CancelledCount);
                $("#CompletedCount").text(response.CompletedCount);
                $("#PaymentCount").text(response.PaymentCount);
                $("#FailedCount").text(response.FailedCount);
            },
            error: function() {
                console.error("Error fetching updated counts.");
            }
        });
    });

</script>
