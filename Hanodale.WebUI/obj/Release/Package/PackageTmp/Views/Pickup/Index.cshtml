@model Hanodale.WebUI.Models.GridViewIndexModel
@using Hanodale.Utility.Globalize
@using Hanodale.WebUI
@using System.Web.Optimization

@{
    ViewBag.Title = "Index";
    if (Request.IsAjaxRequest())
    {
        Layout = null;
    }
    else
    {
        Layout = "~/Views/Shared/_Layout.cshtml";
    }
}


<!-- Hidden Variable -->
<input type="hidden" id="alert-delete" value="@Html.GetGlobalResource("MSG_CONFIRM_DELETE")">
<input type="hidden" class="mainPart" value="pickup">
<input type="hidden" class="table-congif" value="pickup" data-columncount="@Model.columnCount" data-button="true" data-condition="false" data-extended-event-btn="false" data-disall="true" data-auto-hide-column="true" data-export-btn="true" data-filterId="@Model.masterRecord_Id" data-dest="#d-cp-Order">
<!-- Hidden Variable -->

<div class="row-flex">
    <div class="col-xs-12 col-sm-7 col-md-7 col-lg-4 nPadding">
        <h1 class="page-title txt-color-blueDark">
            <i class="fa fa-table fa-fw "></i>
            Manage Picking
        </h1>
    </div>
    @* @if (Model.accessRight.canAdd && !Model.readOnly)
    {
        <div class="col-xs-12 col-sm-5 col-md-5 col-lg-8">
            <ul id="sparks" class="">
                <li class="sparks-info">
                    <button id="create-pickup" data-url="Orders/Create" class="btn btn-sm btn-primary" type="button">
                        <i class="fa fa-plus"></i>
                        @Html.GetGlobalResource("BTN_CREATE_ORDERS")
                    </button>
                </li>
            </ul>
        </div>
    } *@
</div>
<div class="formSpliter"></div>
<div id="message" class="alert alert-success" style="display: none"></div>

<!-- starts stats -->
<div class="container">
    <div class="row">
        <!-- Pending for Picking -->
        <div class="col-md-4 mb-3">
            <div class="card bg-warning text-white compact-card">
                <div class="card-body d-flex justify-content-between align-items-center">
                    <div>
                        <h6 class="card-title mb-0"><i class="fa fa-folder-open"></i>Pending for Picking</h6>
                        <span class="h3 mb-0">@ViewBag.PendingCount</span>
                    </div>
                    <a href="#" class="text-white status-trigger" data-stindex="SubmitForPicking">VIEW MORE <i class="fa fa-arrow-right"></i></a>
                </div>
            </div>
        </div>

        <!-- Accepted -->
        <div class="col-md-4 mb-3">
            <div class="card bg-primary text-white compact-card">
                <div class="card-body d-flex justify-content-between align-items-center">
                    <div>
                        <h6 class="card-title mb-0"><i class="fa fa-check"></i>Accepted</h6>
                        <span class="h3 mb-0">@ViewBag.PickupAcceptedCount</span>
                    </div>
                    <a href="#" class="text-white status-trigger" data-stindex="PickupAccepted">VIEW MORE <i class="fa fa-arrow-right"></i></a>
                </div>
            </div>
        </div>

        <!-- Picked -->
        <div class="col-md-4 mb-3">
            <div class="card bg-success text-white compact-card">
                <div class="card-body d-flex justify-content-between align-items-center">
                    <div>
                        <h6 class="card-title mb-0"><i class="fa fa-check"></i>Picked</h6>
                        <span class="h3 mb-0">@ViewBag.PickedCount</span>
                    </div>
                    <a href="#" class="text-white status-trigger" data-stindex="Picked">VIEW MORE <i class="fa fa-arrow-right"></i></a>
                </div>
            </div>
        </div>
    </div>

    <input type="hidden" name="conditionType" id="conditionType" value="PickupAll" />
    <button style="display: none;" type="button" class="btn btn-sm btn-primary customFilterDatatableWithSearchBTN">@Resources.DATATABLE_SEARCH</button>
</div>
<!-- end stats -->

<!-- widget grid -->
<section id="widget-grid" class="">
    <!-- row -->
    <div class="">
        <!-- NEW WIDGET START -->
        <article class="col-xs-12 col-sm-12 col-md-12 col-lg-12 nPadding">

            <!-- Widget ID (each widget will need unique ID)-->
            <div class="jarviswidget jarviswidget-color-darken" id="wid-id-234"
                data-widget-editbutton="false"
                data-widget-deletebutton="false"
                data-widget-colorbutton="false"
                data-widget-sortable="false">
                <header>
                    <span class="widget-icon"><i class="fa fa-table"></i></span>

                    <h2>@Html.GetGlobalResource("ORDERS_GRID_TITLE")</h2>

                </header>

                <!-- widget div-->
                <div>
                    <!-- widget edit box -->
                    <div class="jarviswidget-editbox">
                        <!-- This area used as dropdown edit box -->
                    </div>
                    <!-- end widget edit box -->
                    <!-- widget content -->
                    <div class="widget-body no-padding">
                        <table id="dt_pickup" class="table table-striped table-bordered table-hover" width="100%" data-stindex="3" data-amountcolumn="5">
                            <thead>
                                <tr>
                                    @if (Model.lstColumn != null)
                                    {
                                        foreach (var item in Model.lstColumn)
                                        {
                                        <th data-class="@(item.isExpandable ? "expand" : "")" data-hide="@(item.isExpandable ? "" : "phone,tablet")">@Html.GetGlobalResource(item.resourceKeyName)</th>
                                        }
                                    }
                                    <th class="table-column-header" style="width: @(Model.gridViewButtonColumnWidth)px;"></th>
                                </tr>
                            </thead>
                            <tbody></tbody>
                        </table>
                    </div>
                </div>
            </div>
        </article>
    </div>

</section>

<style>
    .compact-card {
        height: 80px;
    }

        .compact-card .card-body {
            padding: 0.5rem 1rem;
        }

        .compact-card .card-title {
            font-size: 0.9rem;
        }

        .compact-card a {
            font-size: 0.8rem;
        }

    .SubmitForPicking .verify-pickup, .SubmitForPicking .order-picking {
        display: none;
    }

    .PickupAccepted .acc-order-control, .PickupAccepted .verify-pickup {
        display: none;
    }

    .Picked .acc-order-control, .Picked .order-picking, .Picked .verify-pickup {
        display: none;
    }
</style>

@Scripts.Render(bundles.scripts.common_index)

<!-- Protected Script -->
<script>
    $(document).ready(function () {
        $(document).off("click", ".acc-order-control").on("click", ".acc-order-control", function (e) {
            e.preventDefault();
            var id = $(this).attr("data-url");
            console.log(id);
            $.SmartMessageBox({
                title: "Alert!",
                content: "Are you sure to accept this order?",
                buttons: '[No][Yes]'
            }, function (ButtonPressed) {
                if (ButtonPressed === "Yes") {
                    $.ajax({
                        url: '@Url.Action("AcceptOrder", "Pickup")',  // replace with your URL
                        type: 'POST',
                        data: { id: id },
                        success: function (response) {
                            // Display success message
                            userMessage.show("Success", "The order accepted successfully.");
                            $(".customFilterDatatableWithSearchBTN").trigger("click");
                            // Update the Accepted count
                            var acceptedCountElement = $(".card.bg-primary .h3.mb-0"); // Target the span with count inside the Accepted card
                            var currentCount = parseInt(acceptedCountElement.text());   // Get the current count as an integer

                            // Increase the count by 1
                            acceptedCountElement.text(currentCount + 1);

                            // Decrease the Pending for Picking count
                            var pendingCountElement = $(".card.bg-warning .h3.mb-0"); // Target the span with count inside the "Pending for Picking" card
                            var currentPendingCount = parseInt(pendingCountElement.text());   // Get the current count as an integer

                            // Ensure the count doesn't go below 0
                            if (currentPendingCount > 0) {
                                pendingCountElement.text(currentPendingCount - 1);
                            }
                        },
                        error: function (xhr, status, error) {
                            // Display error message
                            userMessage.show("Error", 'An error occurred while updating the order.');
                        }
                    });
                }
            });
        })
        $(".status-trigger").on("click", function (e) {
            e.preventDefault();
            var stat2 = $(this).attr("data-stindex");
            $("#conditionType").val(stat2);
            $(".customFilterDatatableWithSearchBTN").trigger("click")
        })
        $(document).off("click", ".verify-pickup").on("click", ".verify-pickup", function () {
            var id = $(this).attr("data-url")
            var partName = "Pickup/";
            var readOnly = false;
            var destInner = $(this).closest('div.page-content').attr("id")
            var actionUrl = partName + "VerifyOrder/";
            var elem = $('.table-congif[value="' + partName + '"]');
            var destOuter = $(elem).attr('data-edit-dest');
            var businessId = $(elem).attr("data-filterId")
            var param = { id: id, businessId: businessId, readOnly: readOnly }
            if (actionUrl) {
                if (destInner) {
                    navigate.navigateElementByParameter(actionUrl, param, $("#" + destInner));
                } else if (destOuter) {
                    navigate.navigateElementByParameter(actionUrl, param, $(destOuter));
                }
                else {
                    navigate.viewByParameter(actionUrl, param);
                }
            }
        });

        $(document).off("click", ".order-picking").on("click", ".order-picking", function () {
            var id = $(this).attr("data-url")
            var partName = "Pickup/";
            var readOnly = false;
            var destInner = $(this).closest('div.page-content').attr("id")
            var actionUrl = partName + "OrderPicking/";
            var elem = $('.table-congif[value="' + partName + '"]');
            var destOuter = $(elem).attr('data-edit-dest');
            var businessId = $(elem).attr("data-filterId")
            var param = { id: id, businessId: businessId, readOnly: readOnly }
            if (actionUrl) {
                if (destInner) {
                    navigate.navigateElementByParameter(actionUrl, param, $("#" + destInner));
                } else if (destOuter) {
                    navigate.navigateElementByParameter(actionUrl, param, $(destOuter));
                }
                else {
                    navigate.viewByParameter(actionUrl, param);
                }
            }
        });
    });

</script>
