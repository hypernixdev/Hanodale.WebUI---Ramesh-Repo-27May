// <auto-generated />
// This file was generated by a T4 template.
// Don't change it directly as your change would get overwritten.  Instead, make changes
// to the .tt file (i.e. the T4 template) and save it to regenerate this file.

// Make sure the compiler doesn't complain about missing Xml comments
#pragma warning disable 1591
#region T4MVC

using System;
using System.Diagnostics;
using System.CodeDom.Compiler;
using System.Collections.Generic;
using System.Linq;
using System.Runtime.CompilerServices;
using System.Threading.Tasks;
using System.Web;
using System.Web.Hosting;
using System.Web.Mvc;
using System.Web.Mvc.Ajax;
using System.Web.Mvc.Html;
using System.Web.Routing;
using T4MVC;
namespace Hanodale.WebUI.Controllers
{
    public partial class ChartPanelOrderDashboardController
    {
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected ChartPanelOrderDashboardController(Dummy d) { }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToAction(ActionResult result)
        {
            var callInfo = result.GetT4MVCResult();
            return RedirectToRoute(callInfo.RouteValueDictionary);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToAction(Task<ActionResult> taskResult)
        {
            return RedirectToAction(taskResult.Result);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToActionPermanent(ActionResult result)
        {
            var callInfo = result.GetT4MVCResult();
            return RedirectToRoutePermanent(callInfo.RouteValueDictionary);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToActionPermanent(Task<ActionResult> taskResult)
        {
            return RedirectToActionPermanent(taskResult.Result);
        }

        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult DrawChartDetail()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.DrawChartDetail);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.JsonResult GetPieChartInfo()
        {
            return new T4MVC_System_Web_Mvc_JsonResult(Area, Name, ActionNames.GetPieChartInfo);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.JsonResult GetBarChartInfo()
        {
            return new T4MVC_System_Web_Mvc_JsonResult(Area, Name, ActionNames.GetBarChartInfo);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.JsonResult GetSalesSummary()
        {
            return new T4MVC_System_Web_Mvc_JsonResult(Area, Name, ActionNames.GetSalesSummary);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.JsonResult GetSalesCount()
        {
            return new T4MVC_System_Web_Mvc_JsonResult(Area, Name, ActionNames.GetSalesCount);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ChartPanelOrderDashboardController Actions { get { return MVC.ChartPanelOrderDashboard; } }
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Area = "";
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Name = "ChartPanelOrderDashboard";
        [GeneratedCode("T4MVC", "2.0")]
        public const string NameConst = "ChartPanelOrderDashboard";

        static readonly ActionNamesClass s_actions = new ActionNamesClass();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionNamesClass ActionNames { get { return s_actions; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionNamesClass
        {
            public readonly string Index = "Index";
            public readonly string DrawChartDetail = "DrawChartDetail";
            public readonly string GetPieChartInfo = "GetPieChartInfo";
            public readonly string GetBarChartInfo = "GetBarChartInfo";
            public readonly string GetSalesSummary = "GetSalesSummary";
            public readonly string GetSalesCount = "GetSalesCount";
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionNameConstants
        {
            public const string Index = "Index";
            public const string DrawChartDetail = "DrawChartDetail";
            public const string GetPieChartInfo = "GetPieChartInfo";
            public const string GetBarChartInfo = "GetBarChartInfo";
            public const string GetSalesSummary = "GetSalesSummary";
            public const string GetSalesCount = "GetSalesCount";
        }


        static readonly ActionParamsClass_DrawChartDetail s_params_DrawChartDetail = new ActionParamsClass_DrawChartDetail();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_DrawChartDetail DrawChartDetailParams { get { return s_params_DrawChartDetail; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_DrawChartDetail
        {
            public readonly string startDate = "startDate";
            public readonly string endDate = "endDate";
            public readonly string chartType_Id = "chartType_Id";
            public readonly string section = "section";
        }
        static readonly ActionParamsClass_GetPieChartInfo s_params_GetPieChartInfo = new ActionParamsClass_GetPieChartInfo();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_GetPieChartInfo GetPieChartInfoParams { get { return s_params_GetPieChartInfo; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_GetPieChartInfo
        {
            public readonly string startDate = "startDate";
            public readonly string endDate = "endDate";
            public readonly string chartType_Id = "chartType_Id";
        }
        static readonly ActionParamsClass_GetBarChartInfo s_params_GetBarChartInfo = new ActionParamsClass_GetBarChartInfo();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_GetBarChartInfo GetBarChartInfoParams { get { return s_params_GetBarChartInfo; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_GetBarChartInfo
        {
            public readonly string startDate = "startDate";
            public readonly string endDate = "endDate";
            public readonly string chartType_Id = "chartType_Id";
        }
        static readonly ActionParamsClass_GetSalesSummary s_params_GetSalesSummary = new ActionParamsClass_GetSalesSummary();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_GetSalesSummary GetSalesSummaryParams { get { return s_params_GetSalesSummary; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_GetSalesSummary
        {
            public readonly string dateFrom = "dateFrom";
            public readonly string dateTo = "dateTo";
        }
        static readonly ActionParamsClass_GetSalesCount s_params_GetSalesCount = new ActionParamsClass_GetSalesCount();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_GetSalesCount GetSalesCountParams { get { return s_params_GetSalesCount; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_GetSalesCount
        {
            public readonly string dateFrom = "dateFrom";
            public readonly string dateTo = "dateTo";
        }
        static readonly ViewsClass s_views = new ViewsClass();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ViewsClass Views { get { return s_views; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ViewsClass
        {
            static readonly _ViewNamesClass s_ViewNames = new _ViewNamesClass();
            public _ViewNamesClass ViewNames { get { return s_ViewNames; } }
            public class _ViewNamesClass
            {
                public readonly string _BarChart = "_BarChart";
                public readonly string _PieChart = "_PieChart";
                public readonly string Index = "Index";
            }
            public readonly string _BarChart = "~/Views/ChartPanelOrderDashboard/_BarChart.cshtml";
            public readonly string _PieChart = "~/Views/ChartPanelOrderDashboard/_PieChart.cshtml";
            public readonly string Index = "~/Views/ChartPanelOrderDashboard/Index.cshtml";
        }
    }

    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public partial class T4MVC_ChartPanelOrderDashboardController : Hanodale.WebUI.Controllers.ChartPanelOrderDashboardController
    {
        public T4MVC_ChartPanelOrderDashboardController() : base(Dummy.Instance) { }

        [NonAction]
        partial void IndexOverride(T4MVC_System_Web_Mvc_ActionResult callInfo);

        [NonAction]
        public override System.Web.Mvc.ActionResult Index()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Index);
            IndexOverride(callInfo);
            return callInfo;
        }

        [NonAction]
        partial void DrawChartDetailOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, string startDate, string endDate, string chartType_Id, string section);

        [NonAction]
        public override System.Web.Mvc.ActionResult DrawChartDetail(string startDate, string endDate, string chartType_Id, string section)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.DrawChartDetail);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "startDate", startDate);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "endDate", endDate);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "chartType_Id", chartType_Id);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "section", section);
            DrawChartDetailOverride(callInfo, startDate, endDate, chartType_Id, section);
            return callInfo;
        }

        [NonAction]
        partial void GetPieChartInfoOverride(T4MVC_System_Web_Mvc_JsonResult callInfo, string startDate, string endDate, string chartType_Id);

        [NonAction]
        public override System.Web.Mvc.JsonResult GetPieChartInfo(string startDate, string endDate, string chartType_Id)
        {
            var callInfo = new T4MVC_System_Web_Mvc_JsonResult(Area, Name, ActionNames.GetPieChartInfo);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "startDate", startDate);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "endDate", endDate);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "chartType_Id", chartType_Id);
            GetPieChartInfoOverride(callInfo, startDate, endDate, chartType_Id);
            return callInfo;
        }

        [NonAction]
        partial void GetBarChartInfoOverride(T4MVC_System_Web_Mvc_JsonResult callInfo, string startDate, string endDate, string chartType_Id);

        [NonAction]
        public override System.Web.Mvc.JsonResult GetBarChartInfo(string startDate, string endDate, string chartType_Id)
        {
            var callInfo = new T4MVC_System_Web_Mvc_JsonResult(Area, Name, ActionNames.GetBarChartInfo);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "startDate", startDate);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "endDate", endDate);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "chartType_Id", chartType_Id);
            GetBarChartInfoOverride(callInfo, startDate, endDate, chartType_Id);
            return callInfo;
        }

        [NonAction]
        partial void GetSalesSummaryOverride(T4MVC_System_Web_Mvc_JsonResult callInfo, System.DateTime dateFrom, System.DateTime dateTo);

        [NonAction]
        public override System.Web.Mvc.JsonResult GetSalesSummary(System.DateTime dateFrom, System.DateTime dateTo)
        {
            var callInfo = new T4MVC_System_Web_Mvc_JsonResult(Area, Name, ActionNames.GetSalesSummary);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "dateFrom", dateFrom);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "dateTo", dateTo);
            GetSalesSummaryOverride(callInfo, dateFrom, dateTo);
            return callInfo;
        }

        [NonAction]
        partial void GetSalesCountOverride(T4MVC_System_Web_Mvc_JsonResult callInfo, System.DateTime dateFrom, System.DateTime dateTo);

        [NonAction]
        public override System.Web.Mvc.JsonResult GetSalesCount(System.DateTime dateFrom, System.DateTime dateTo)
        {
            var callInfo = new T4MVC_System_Web_Mvc_JsonResult(Area, Name, ActionNames.GetSalesCount);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "dateFrom", dateFrom);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "dateTo", dateTo);
            GetSalesCountOverride(callInfo, dateFrom, dateTo);
            return callInfo;
        }

    }
}

#endregion T4MVC
#pragma warning restore 1591
