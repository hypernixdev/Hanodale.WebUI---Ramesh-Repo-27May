@model Hanodale.WebUI.Models.PriceListModel
@using Hanodale.Utility.Globalize
@using Hanodale.WebUI
@using System.Web.Optimization
@{
    ViewBag.Title = "Create";
    Layout = null;
}

<!-- Hidden Variable -->
<input type="hidden" id="MSG_CONFIRM_SAVE" value="@Html.GetGlobalResource("MSG_CONFIRM_SAVE")">
<input type="hidden" id="MSG_CONFIRM_UPDATE" value="@Html.GetGlobalResource("MSG_CONFIRM_UPDATE")">
@*<input type="hidden" id="form-congif" value="pricelist" data-readOnly="@Model.readOnly">*@
<input type="hidden" id="form-congif" value="pricelist" data-readOnly="">

<!-- Hidden Variable -->

<div class="widget-body">
</div>

<div id="content" style="opacity: 1; border: none">

    @*
        <div class="row-flex">
            <div class="col-xs-12 col-sm-7 col-md-7 col-lg-4">
                <h1 class="page-title txt-color-blueDark">
                    <i class="fa fa-edit fa-fw "></i>

                    @if (Model.isEdit && !Model.readOnly)
                    {
                        @Html.GetGlobalResource("PAGE_HEADER_EDIT_PRICELIST")
                    }
                    else if (!Model.isEdit && !Model.readOnly)
                    {
                        @Html.GetGlobalResource("PAGE_HEADER_CREATE_PRICELIST")
                    }
                    else if (Model.readOnly)
                    {
                        @Html.GetGlobalResource("PAGE_HEADER_VIEW_PRICELIST")
                    }
                </h1>
            </div>
        </div>
    *@


    <div class="formSpliter"></div>
    <!-- widget grid -->
    <section id="widget-grid" class="">

        <div class="row">
            <div id="message" class="alert alert-success" style="display: none"></div>
            @using (Html.BeginForm(null, null, FormMethod.Post, new { id = "validation-form", @class = "form-horizontal" }))
            {@Html.AntiForgeryToken()
            @Html.ValidationSummary(true)
            @Html.HiddenFor(model => model.id)

            @Html.HiddenFor(model => model.listCode, new { id = "PriceListCode", name = "PriceListCode" })

            <article class="col-sm-12 col-md-12 col-lg-12 sortable-grid ui-sortable">

                <!-- Widget ID (each widget will need unique ID)-->
                <!-- end widget -->

                <div class="jarviswidget jarviswidget-sortable" id="wid-id-1" data-widget-colorbutton="false" data-widget-editbutton="false" data-widget-custombutton="false" style="" role="widget">

                    <header role="heading">
                        <div class="jarviswidget-ctrls" role="menu"><a href="javascript:void(0);" class="button-icon jarviswidget-fullscreen-btn" rel="tooltip" title="" data-placement="bottom" data-original-title="Fullscreen"><i class="fa fa-expand "></i></a></div>

                        <span class="widget-icon"><i class="fa fa-edit"></i></span>
                        <h2>@Html.GetGlobalResource("PRICELIST_INFO")</h2>
                        <span class="jarviswidget-loader"><i class="fa fa-refresh fa-spin"></i></span>
                    </header>

                    <!-- widget div-->
                    <div role="content">

                        <!-- widget edit box -->
                        <div class="jarviswidget-editbox">
                            <!-- This area used as dropdown edit box -->

                        </div>
                        <!-- end widget edit box -->
                        <!-- widget content -->
                        <div class="widget-body no-padding">


                            <fieldset>
                                <div class="smart-form">

                                    <div class="form-group">
                                        @Html.LabelFor(model => model.listCode, new { @class = "col-xs-12 col-sm-3 col-md-3 col-lg-2 control-label", })

                                        <div class="col-xs-12 col-sm-6 col-md-6 col-lg-5">
                                            <div class="clearfix">
                                                <label class="input">
                                                    <i class="icon-append fa fa-pencil"></i>
                                                    @Html.EditorFor(model => model.listCode, new { @readonly = "readonly", @class = "form-control", @placeholder = @Html.DisplayNameFor(m => m.listCode) })
                                                    @Html.ValidationMessageFor(m => m.listCode)
                                                </label>
                                            </div>
                                        </div>
                                    </div>



                                    <div class="form-group">
                                        @Html.LabelFor(model => model.currencyCode, new { @class = "col-xs-12 col-sm-3 col-md-3 col-lg-2 control-label", })

                                        <div class="col-xs-12 col-sm-6 col-md-6 col-lg-5">
                                            <div class="clearfix">
                                                <label class="input">
                                                    <i class="icon-append fa fa-pencil"></i>
                                                    @Html.EditorFor(model => model.currencyCode, new { @readonly = "readonly", @class = "form-control", @placeholder = @Html.DisplayNameFor(m => m.currencyCode) })
                                                    @Html.ValidationMessageFor(m => m.currencyCode)
                                                </label>
                                            </div>
                                        </div>
                                    </div>

                                    <div class="form-group">
                                        @Html.LabelFor(model => model.listDescription, new { @class = "col-xs-12 col-sm-3 col-md-3 col-lg-2 control-label", })

                                        <div class="col-xs-12 col-sm-6 col-md-6 col-lg-5">
                                            <div class="clearfix">
                                                <label class="input">
                                                    <i class="icon-append fa fa-pencil"></i>
                                                    @Html.EditorFor(model => model.listDescription, new { @readonly = "readonly", @class = "form-control", @placeholder = @Html.DisplayNameFor(m => m.listDescription) })
                                                    @Html.ValidationMessageFor(m => m.listDescription)
                                                </label>
                                            </div>
                                        </div>
                                    </div>

                                    <div class="form-group">
                                        @Html.LabelFor(model => model.startDate, new { @class = "col-xs-12 col-sm-3 col-md-3 col-lg-2 control-label", })
                                        <div class="col-xs-12 col-sm-6 col-md-6 col-lg-5">
                                            <div class="clearfix">
                                                <label class="input">
                                                    @Html.EditorFor(model => model.startDate, new { @readonly = "readonly", @class = "datepicker form-control date-picker" })
                                                    @Html.ValidationMessageFor(m => m.startDate)
                                                </label>
                                            </div>
                                        </div>
                                    </div>


                                    <div class="form-group">
                                        @Html.LabelFor(model => model.endDate, new { @class = "col-xs-12 col-sm-3 col-md-3 col-lg-2 control-label", })
                                        <div class="col-xs-12 col-sm-6 col-md-6 col-lg-5">
                                            <div class="clearfix">
                                                <label class="input">
                                                    @Html.EditorFor(model => model.endDate, new { @readonly = "readonly", @class = "datepicker form-control date-picker" })
                                                    @Html.ValidationMessageFor(m => m.endDate)
                                                </label>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.custNum, new { @class = "col-xs-12 col-sm-3 col-md-3 col-lg-2 control-label", })

                                        <div class="col-xs-12 col-sm-6 col-md-6 col-lg-5">
                                            <div class="clearfix">
                                                <label class="input">
                                                    <i class="icon-append fa fa-pencil"></i>
                                                    @Html.EditorFor(model => model.custNum, new { @readonly = "readonly", @class = "form-control", @placeholder = @Html.DisplayNameFor(m => m.custNum) })
                                                    @Html.ValidationMessageFor(m => m.custNum)
                                                </label>
                                            </div>
                                        </div>
                                    </div>

                                    <div class="form-group">
                                        @Html.LabelFor(model => model.custID, new { @class = "col-xs-12 col-sm-3 col-md-3 col-lg-2 control-label", })

                                        <div class="col-xs-12 col-sm-6 col-md-6 col-lg-5">
                                            <div class="clearfix">
                                                <label class="input">
                                                    <i class="icon-append fa fa-pencil"></i>
                                                    @Html.EditorFor(model => model.custID, new { @readonly = "readonly", @class = "form-control", @placeholder = @Html.DisplayNameFor(m => m.custID) })
                                                    @Html.ValidationMessageFor(m => m.custID)
                                                </label>
                                            </div>
                                        </div>
                                    </div>

                                    <div class="form-group">
                                        @Html.LabelFor(model => model.shipToNum, new { @class = "col-xs-12 col-sm-3 col-md-3 col-lg-2 control-label", })

                                        <div class="col-xs-12 col-sm-6 col-md-6 col-lg-5">
                                            <div class="clearfix">
                                                <label class="input">
                                                    <i class="icon-append fa fa-pencil"></i>
                                                    @Html.EditorFor(model => model.shipToNum, new { @readonly = "readonly", @class = "form-control", @placeholder = @Html.DisplayNameFor(m => m.shipToNum) })
                                                    @Html.ValidationMessageFor(m => m.shipToNum)
                                                </label>
                                            </div>
                                        </div>
                                    </div>

                                    <div class="form-group">
                                        @Html.LabelFor(model => model.SeqNum, new { @class = "col-xs-12 col-sm-3 col-md-3 col-lg-2 control-label", })

                                        <div class="col-xs-12 col-sm-6 col-md-6 col-lg-5">
                                            <div class="clearfix">
                                                <label class="input">
                                                    <i class="icon-append fa fa-pencil"></i>
                                                    @Html.EditorFor(model => model.SeqNum, new { @readonly = "readonly", @class = "form-control", @placeholder = @Html.DisplayNameFor(m => m.SeqNum) })
                                                    @Html.ValidationMessageFor(m => m.SeqNum)
                                                </label>
                                            </div>
                                        </div>
                                    </div>

                                    <div class="form-group">
                                        @Html.LabelFor(model => model.CustGroup, new { @class = "col-xs-12 col-sm-3 col-md-3 col-lg-2 control-label", })

                                        <div class="col-xs-12 col-sm-6 col-md-6 col-lg-5">
                                            <div class="clearfix">
                                                <label class="input">
                                                    <i class="icon-append fa fa-pencil"></i>
                                                    @Html.EditorFor(model => model.CustGroup, new { @readonly = "readonly", @class = "form-control", @placeholder = @Html.DisplayNameFor(m => m.CustGroup) })
                                                    @Html.ValidationMessageFor(m => m.CustGroup)
                                                </label>
                                            </div>
                                        </div>
                                    </div>


                                </div>
                            </fieldset>

                        </div>
                        <!-- end widget content -->

                    </div>
                    <!-- end widget div -->

                </div>
            </article>


            <div id="pricelist" style="width:100%">
                <div class="title-section">
                    <h2 class="title">Part Price List</h2>
                </div>

                <table id="partPricelistTable" class="table table-striped table-bordered" style="width:100%">

                    <thead>
                        <tr>
                            <th>PartNo</th>
                            <th>Base Price</th>
                            <th>UOMCode</th>

                        </tr>
                    </thead>
                </table>

            </div>




            <article class="col-sm-12 col-md-12 col-lg-12 sortable-grid ui-sortable">

                <!-- Widget ID (each widget will need unique ID)-->
                <!-- end widget -->

                <div class="jarviswidget jarviswidget-color-blueDark jarviswidget-sortable" id="wid-id-5" data-widget-colorbutton="false" data-widget-editbutton="false" data-widget-custombutton="false" style="" role="widget">


                    <!-- widget div-->
                    <div role="content">

                        <!-- widget edit box -->
                        <div class="jarviswidget-editbox">
                            <!-- This area used as dropdown edit box -->

                        </div>
                        <!-- end widget edit box -->
                        <!-- widget content -->
                        <div class="widget-body no-padding">
                            <footer id="btnSection">
                                <div class="form-group">

                                    <div class="col-md-2"></div>
                                    <div class="col-xs-12 col-sm-10 col-md-10 col-lg-10">


                                        <button id="back-pricelist" class="btn btn-sm btn-primary" type="button" data-url="PriceList/Index">
                                            <i class="fa fa-mail-reply"></i>
                                            @Html.GetGlobalResource("BTN_BACK")
                                        </button>
                                    </div>
                                </div>
                            </footer>
                        </div>
                        <!-- end widget content -->

                    </div>
                    <!-- end widget div -->

                </div>
            </article>

        }




        </div>

        <!-- END ROW -->
        <!-- NEW ROW -->
        <!-- END ROW-->

    </section>



</div>

<script type="text/javascript">
    $(document).ready(function () {

        var tablePrice = $('#partPricelistTable').DataTable({
            "paging": true,
            "ordering": false,
            "info": false,
            "searching": true,
            "responsive": true,
            "columns": [
                { "data": "partNum" },
                { "data": "basePrice" },
                { "data": "uomCode" },

            ]
        });

        var ListCode = $('#PriceListCode').val();
        $.ajax({
            url: '@Url.Action("GetPriceListParts", "PriceList")', // Replace with your actual API endpoint
            type: 'POST',
            data: { ListCode: ListCode },
            dataType: 'json',
            success: function (response) {

                if (response.success && response.priceListPart) {
                    // Clear existing table data
                    tablePrice.clear();

                    // Add new data to the table
                    tablePrice.rows.add(response.priceListPart).draw();

                    // Reset the "select all" checkbox
                    // $('#selectAll').prop('checked', false);
                } else {
                   // alert('No record found or an error occurred.');
                }
            },
            error: function () {
                alert('Failed to fetch Price List.');
            }
        });

    });
</script>
<style>
    .dataTables_filter [type='search'] {
        width: auto !important;
    }
</style>
<!-- Protected Script -->
@Scripts.Render(bundles.scripts.common_add_edit)
@Scripts.Render("~/bundles/jqueryval")
<!-- /.page-content -->
