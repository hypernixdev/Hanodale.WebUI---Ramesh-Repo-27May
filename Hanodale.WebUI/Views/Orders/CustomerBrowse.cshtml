@using Hanodale.Utility.Globalize
@using Hanodale.WebUI
@using System.Web.Optimization

@{
    ViewBag.Title = "Index";
    Layout = null;
}

<div class="container-fluid">
    <div class="col-xs-12 col-sm-7 col-md-7 col-lg-4 nPadding">
        <h1 class="page-title txt-color-blueDark">
            <i class="fa fa-table fa-fw "></i>
            Select Customer
        </h1>
    </div>
    <div class="table-responsive">
        <table id="dt_customer_picker" class="table table-striped table-bordered" style="width: 100%">
            <thead class="bg-light">
                <tr>
                    <th><input type="checkbox" id="selectAllCustomers"></th> <!-- Header Checkbox -->
                    <th>Customer ID</th>
                    <th>Customer Name</th>
                    <th>Contact</th>
                    <th>Email</th>
                    <th>Address</th>
                </tr>
                <tr>
                    <th></th>
                    <th><input type="text" class="form-control filter-input" placeholder="Search ID"></th>
                    <th><input type="text" class="form-control filter-input" placeholder="Search Name"></th>
                    <th><input type="text" class="form-control filter-input" placeholder="Search Contact"></th>
                    <th><input type="text" class="form-control filter-input" placeholder="Search Email"></th>
                    <th><input type="text" class="form-control filter-input" placeholder="Search Address"></th>
                </tr>
            </thead>
            <tbody>
                <tr>
                    <td><input type="checkbox" class="customer-checkbox"></td>
                    <td>CUST001</td>
                    <td>Customer 1</td>
                    <td>123-456-7890</td>
                    <td>customer1@example.com</td>
                    <td>123 Main St</td>
                </tr>
                <!-- More rows as needed -->
            </tbody>
        </table>
    </div>
    <div class="row mt-3">
        <div class="col-md-6">

        </div>
        <div class="col-md-6" d-flex justify-content-end>
            <button id="back-orders" class="btn btn-sm btn-primary" type="button"  data-url="Orders/Create">
                <i class="fa fa-mail-reply"></i>
                Back
            </button>

            <button type="button" class="btn btn-primary">Select Customer</button>
        </div>
    </div>
</div><div id="waitPop" style="height: 100%; width: 100%; position: fixed; top: 0; left: 0; background: rgba(0, 0, 0, 0.3); z-index: 100000; padding: 0; min-height: 100vh; display: none;">
    <h2 style="text-align: center; color: #fff; margin-top: 25%;">
        <b>Loading </b><img src="Content/img/loading.gif">
    </h2>
</div>
<!-- PACE LOADER - turn this on if you want ajax loading to show (caution: uses lots of memory on iDevices)-->
<script data-pace-options='{ "restartOnRequestAfter": true }' src="~/Scripts/plugin/pace/pace.min.js"></script>

<script>
    $(document).off("click", "#back-orders").on("click", "#back-orders", function () {
        var storedOrderData = JSON.parse(localStorage.getItem('orderData'));
        var orderData = {
            orderNum: storedOrderData.orderNum,
            customer_Id: storedOrderData.customer_Id,
            priceTier: storedOrderData.priceTier,
            shipToAddress_Id: storedOrderData.shipToAddress_Id,
            orderDate: storedOrderData.orderDate,
            orderComment: '', // Add a textarea for comments if needed
            OrderItems: [],
            orderStatus: storedOrderData.orderStatus,
            productSearch: storedOrderData.productSearch
        };
        if (storedOrderData.OrderItems.length > 0 && storedOrderData.OrderItems[0].partNum != '') {
            for (let i = 0; i < storedOrderData.OrderItems.length; i++) {
                 
                var item = {
                    partNum: storedOrderData.OrderItems[i].partNum,
                    parCode: storedOrderData.OrderItems[i].partNum,
                    description: storedOrderData.OrderItems[i].description,
                    prodGroup: storedOrderData.OrderItems[i].prodGroup,
                    product_Id: storedOrderData.OrderItems[i].product_Id, // Assuming salesUm is the same as ium
                    QtyType_ModuleItem_Id: storedOrderData.OrderItems[i].QtyType_ModuleItem_Id,
                    orderQty: storedOrderData.OrderItems[i].orderQty,
                    OrderUOM: storedOrderData.OrderItems[i].OrderUOM,
                    OrderUOM_Id: storedOrderData.OrderItems[i].OrderUOM_Id,// Add a field for discount if needed                      
                    operationStyle_ModuleItem_Id: storedOrderData.OrderItems[i].operationStyle_ModuleItem_Id,
                    operationCost: storedOrderData.OrderItems[i].operationCost,
                    complimentary_ModuleItem_Id: storedOrderData.OrderItems[i].complimentary_ModuleItem_Id,
                    unitPrice: parseFloat(storedOrderData.OrderItems[i].unitPrice).toFixed(2),
                    productSearch: storedOrderData.OrderItems[i].productSearch,// Assuming listPrice is the same as unitPrice
                };
                orderData.OrderItems.push(item);
            }
        }
        localStorage.setItem('orderDataAfterAddProd', JSON.stringify(orderData))
      
        var partName = "Orders/";
        var readOnly = false;
        var destInner = $(this).closest('div.page-content').attr("id")
        var actionUrl = partName + "Create/";
        var elem = $('.table-congif[value="' + partName + '"]');
        var destOuter = $(elem).attr('data-edit-dest');
        var businessId = $(elem).attr("data-filterId")
      
        if (actionUrl) {
            if (destInner) {
                navigate.navigateElementByParameter(actionUrl, orderData, $("#" + destInner));
            } else if (destOuter) {
                navigate.navigateElementByParameter(actionUrl, orderData, $(destOuter));
            }
            else {
                navigate.viewByParameter(actionUrl, orderData);
            }
        }
    });
</script>

