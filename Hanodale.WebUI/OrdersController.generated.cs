// <auto-generated />
// This file was generated by a T4 template.
// Don't change it directly as your change would get overwritten.  Instead, make changes
// to the .tt file (i.e. the T4 template) and save it to regenerate this file.

// Make sure the compiler doesn't complain about missing Xml comments
#pragma warning disable 1591
#region T4MVC

using System;
using System.Diagnostics;
using System.CodeDom.Compiler;
using System.Collections.Generic;
using System.Linq;
using System.Runtime.CompilerServices;
using System.Threading.Tasks;
using System.Web;
using System.Web.Hosting;
using System.Web.Mvc;
using System.Web.Mvc.Ajax;
using System.Web.Mvc.Html;
using System.Web.Routing;
using T4MVC;
namespace Hanodale.WebUI.Controllers
{
    public partial class OrdersController
    {
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected OrdersController(Dummy d) { }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToAction(ActionResult result)
        {
            var callInfo = result.GetT4MVCResult();
            return RedirectToRoute(callInfo.RouteValueDictionary);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToAction(Task<ActionResult> taskResult)
        {
            return RedirectToAction(taskResult.Result);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToActionPermanent(ActionResult result)
        {
            var callInfo = result.GetT4MVCResult();
            return RedirectToRoutePermanent(callInfo.RouteValueDictionary);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToActionPermanent(Task<ActionResult> taskResult)
        {
            return RedirectToActionPermanent(taskResult.Result);
        }

        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult BindOrders()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.BindOrders);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.JsonResult RenderAction()
        {
            return new T4MVC_System_Web_Mvc_JsonResult(Area, Name, ActionNames.RenderAction);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.JsonResult Create()
        {
            return new T4MVC_System_Web_Mvc_JsonResult(Area, Name, ActionNames.Create);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.JsonResult SaveOrder()
        {
            return new T4MVC_System_Web_Mvc_JsonResult(Area, Name, ActionNames.SaveOrder);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.JsonResult Edit()
        {
            return new T4MVC_System_Web_Mvc_JsonResult(Area, Name, ActionNames.Edit);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.JsonResult CloneOrder()
        {
            return new T4MVC_System_Web_Mvc_JsonResult(Area, Name, ActionNames.CloneOrder);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.JsonResult ReturnOrder()
        {
            return new T4MVC_System_Web_Mvc_JsonResult(Area, Name, ActionNames.ReturnOrder);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.JsonResult CheckBulkDiscountApproval()
        {
            return new T4MVC_System_Web_Mvc_JsonResult(Area, Name, ActionNames.CheckBulkDiscountApproval);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.JsonResult GetDiscountApprovalByOrder()
        {
            return new T4MVC_System_Web_Mvc_JsonResult(Area, Name, ActionNames.GetDiscountApprovalByOrder);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.JsonResult CheckItemReturnStatus()
        {
            return new T4MVC_System_Web_Mvc_JsonResult(Area, Name, ActionNames.CheckItemReturnStatus);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.JsonResult CheckPrintRefundStatus()
        {
            return new T4MVC_System_Web_Mvc_JsonResult(Area, Name, ActionNames.CheckPrintRefundStatus);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.JsonResult LogPrintAction()
        {
            return new T4MVC_System_Web_Mvc_JsonResult(Area, Name, ActionNames.LogPrintAction);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.JsonResult ApproveDiscounts()
        {
            return new T4MVC_System_Web_Mvc_JsonResult(Area, Name, ActionNames.ApproveDiscounts);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.JsonResult LoadCountryListItem()
        {
            return new T4MVC_System_Web_Mvc_JsonResult(Area, Name, ActionNames.LoadCountryListItem);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.JsonResult LoadStateListItem()
        {
            return new T4MVC_System_Web_Mvc_JsonResult(Area, Name, ActionNames.LoadStateListItem);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.JsonResult LoadCityListItem()
        {
            return new T4MVC_System_Web_Mvc_JsonResult(Area, Name, ActionNames.LoadCityListItem);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult Delete()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Delete);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.JsonResult SubmitOrder()
        {
            return new T4MVC_System_Web_Mvc_JsonResult(Area, Name, ActionNames.SubmitOrder);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.JsonResult SubmitScannedItems()
        {
            return new T4MVC_System_Web_Mvc_JsonResult(Area, Name, ActionNames.SubmitScannedItems);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.JsonResult SubmitReturnedItems()
        {
            return new T4MVC_System_Web_Mvc_JsonResult(Area, Name, ActionNames.SubmitReturnedItems);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.JsonResult SubmitOrderScanned()
        {
            return new T4MVC_System_Web_Mvc_JsonResult(Area, Name, ActionNames.SubmitOrderScanned);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.JsonResult UpdateOrder()
        {
            return new T4MVC_System_Web_Mvc_JsonResult(Area, Name, ActionNames.UpdateOrder);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.JsonResult UpdateOrderStatus()
        {
            return new T4MVC_System_Web_Mvc_JsonResult(Area, Name, ActionNames.UpdateOrderStatus);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.JsonResult UpdateOrderPayments()
        {
            return new T4MVC_System_Web_Mvc_JsonResult(Area, Name, ActionNames.UpdateOrderPayments);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.JsonResult PostOrderToApi()
        {
            return new T4MVC_System_Web_Mvc_JsonResult(Area, Name, ActionNames.PostOrderToApi);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.JsonResult Picking()
        {
            return new T4MVC_System_Web_Mvc_JsonResult(Area, Name, ActionNames.Picking);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.JsonResult GetOrderLog()
        {
            return new T4MVC_System_Web_Mvc_JsonResult(Area, Name, ActionNames.GetOrderLog);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult PrintDocument()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.PrintDocument);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public OrdersController Actions { get { return MVC.Orders; } }
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Area = "";
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Name = "Orders";
        [GeneratedCode("T4MVC", "2.0")]
        public const string NameConst = "Orders";

        static readonly ActionNamesClass s_actions = new ActionNamesClass();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionNamesClass ActionNames { get { return s_actions; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionNamesClass
        {
            public readonly string Index = "Index";
            public readonly string BindOrders = "BindOrders";
            public readonly string UpdateCount = "UpdateCount";
            public readonly string RenderAction = "RenderAction";
            public readonly string CustomerBrowse = "CustomerBrowse";
            public readonly string Create = "Create";
            public readonly string SaveOrder = "SaveOrder";
            public readonly string Edit = "Edit";
            public readonly string CloneOrder = "CloneOrder";
            public readonly string ReturnOrder = "ReturnOrder";
            public readonly string GetUsersList = "GetUsersList";
            public readonly string CheckBulkDiscountApproval = "CheckBulkDiscountApproval";
            public readonly string GetDiscountApprovalByOrder = "GetDiscountApprovalByOrder";
            public readonly string CheckItemReturnStatus = "CheckItemReturnStatus";
            public readonly string CheckPrintRefundStatus = "CheckPrintRefundStatus";
            public readonly string LogPrintAction = "LogPrintAction";
            public readonly string ApproveDiscounts = "ApproveDiscounts";
            public readonly string LoadCountryListItem = "LoadCountryListItem";
            public readonly string LoadStateListItem = "LoadStateListItem";
            public readonly string LoadCityListItem = "LoadCityListItem";
            public readonly string Delete = "Delete";
            public readonly string SubmitOrder = "SubmitOrder";
            public readonly string SubmitScannedItems = "SubmitScannedItems";
            public readonly string SubmitReturnedItems = "SubmitReturnedItems";
            public readonly string SubmitOrderScanned = "SubmitOrderScanned";
            public readonly string UpdateOrder = "UpdateOrder";
            public readonly string UpdateOrderStatus = "UpdateOrderStatus";
            public readonly string UpdateOrderPayments = "UpdateOrderPayments";
            public readonly string PostOrderToApi = "PostOrderToApi";
            public readonly string Picking = "Picking";
            public readonly string GetOrderLog = "GetOrderLog";
            public readonly string SyncAllOrders = "SyncAllOrders";
            public readonly string PrintDocument = "PrintDocument";
            public readonly string GetCustomSearchPanel = "GetCustomSearchPanel";
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionNameConstants
        {
            public const string Index = "Index";
            public const string BindOrders = "BindOrders";
            public const string UpdateCount = "UpdateCount";
            public const string RenderAction = "RenderAction";
            public const string CustomerBrowse = "CustomerBrowse";
            public const string Create = "Create";
            public const string SaveOrder = "SaveOrder";
            public const string Edit = "Edit";
            public const string CloneOrder = "CloneOrder";
            public const string ReturnOrder = "ReturnOrder";
            public const string GetUsersList = "GetUsersList";
            public const string CheckBulkDiscountApproval = "CheckBulkDiscountApproval";
            public const string GetDiscountApprovalByOrder = "GetDiscountApprovalByOrder";
            public const string CheckItemReturnStatus = "CheckItemReturnStatus";
            public const string CheckPrintRefundStatus = "CheckPrintRefundStatus";
            public const string LogPrintAction = "LogPrintAction";
            public const string ApproveDiscounts = "ApproveDiscounts";
            public const string LoadCountryListItem = "LoadCountryListItem";
            public const string LoadStateListItem = "LoadStateListItem";
            public const string LoadCityListItem = "LoadCityListItem";
            public const string Delete = "Delete";
            public const string SubmitOrder = "SubmitOrder";
            public const string SubmitScannedItems = "SubmitScannedItems";
            public const string SubmitReturnedItems = "SubmitReturnedItems";
            public const string SubmitOrderScanned = "SubmitOrderScanned";
            public const string UpdateOrder = "UpdateOrder";
            public const string UpdateOrderStatus = "UpdateOrderStatus";
            public const string UpdateOrderPayments = "UpdateOrderPayments";
            public const string PostOrderToApi = "PostOrderToApi";
            public const string Picking = "Picking";
            public const string GetOrderLog = "GetOrderLog";
            public const string SyncAllOrders = "SyncAllOrders";
            public const string PrintDocument = "PrintDocument";
            public const string GetCustomSearchPanel = "GetCustomSearchPanel";
        }


        static readonly ActionParamsClass_Index s_params_Index = new ActionParamsClass_Index();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_Index IndexParams { get { return s_params_Index; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_Index
        {
            public readonly string id = "id";
            public readonly string readOnly = "readOnly";
        }
        static readonly ActionParamsClass_BindOrders s_params_BindOrders = new ActionParamsClass_BindOrders();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_BindOrders BindOrdersParams { get { return s_params_BindOrders; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_BindOrders
        {
            public readonly string param = "param";
            public readonly string myKey = "myKey";
        }
        static readonly ActionParamsClass_RenderAction s_params_RenderAction = new ActionParamsClass_RenderAction();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_RenderAction RenderActionParams { get { return s_params_RenderAction; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_RenderAction
        {
            public readonly string readOnly = "readOnly";
        }
        static readonly ActionParamsClass_Create s_params_Create = new ActionParamsClass_Create();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_Create CreateParams { get { return s_params_Create; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_Create
        {
            public readonly string id = "id";
        }
        static readonly ActionParamsClass_SaveOrder s_params_SaveOrder = new ActionParamsClass_SaveOrder();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_SaveOrder SaveOrderParams { get { return s_params_SaveOrder; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_SaveOrder
        {
            public readonly string model = "model";
        }
        static readonly ActionParamsClass_Edit s_params_Edit = new ActionParamsClass_Edit();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_Edit EditParams { get { return s_params_Edit; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_Edit
        {
            public readonly string id = "id";
            public readonly string readOnly = "readOnly";
        }
        static readonly ActionParamsClass_CloneOrder s_params_CloneOrder = new ActionParamsClass_CloneOrder();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_CloneOrder CloneOrderParams { get { return s_params_CloneOrder; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_CloneOrder
        {
            public readonly string id = "id";
            public readonly string readOnly = "readOnly";
        }
        static readonly ActionParamsClass_ReturnOrder s_params_ReturnOrder = new ActionParamsClass_ReturnOrder();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_ReturnOrder ReturnOrderParams { get { return s_params_ReturnOrder; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_ReturnOrder
        {
            public readonly string id = "id";
            public readonly string readOnly = "readOnly";
        }
        static readonly ActionParamsClass_CheckBulkDiscountApproval s_params_CheckBulkDiscountApproval = new ActionParamsClass_CheckBulkDiscountApproval();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_CheckBulkDiscountApproval CheckBulkDiscountApprovalParams { get { return s_params_CheckBulkDiscountApproval; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_CheckBulkDiscountApproval
        {
            public readonly string items = "items";
        }
        static readonly ActionParamsClass_GetDiscountApprovalByOrder s_params_GetDiscountApprovalByOrder = new ActionParamsClass_GetDiscountApprovalByOrder();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_GetDiscountApprovalByOrder GetDiscountApprovalByOrderParams { get { return s_params_GetDiscountApprovalByOrder; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_GetDiscountApprovalByOrder
        {
            public readonly string orderId = "orderId";
        }
        static readonly ActionParamsClass_CheckItemReturnStatus s_params_CheckItemReturnStatus = new ActionParamsClass_CheckItemReturnStatus();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_CheckItemReturnStatus CheckItemReturnStatusParams { get { return s_params_CheckItemReturnStatus; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_CheckItemReturnStatus
        {
            public readonly string orderId = "orderId";
        }
        static readonly ActionParamsClass_CheckPrintRefundStatus s_params_CheckPrintRefundStatus = new ActionParamsClass_CheckPrintRefundStatus();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_CheckPrintRefundStatus CheckPrintRefundStatusParams { get { return s_params_CheckPrintRefundStatus; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_CheckPrintRefundStatus
        {
            public readonly string orderId = "orderId";
        }
        static readonly ActionParamsClass_LogPrintAction s_params_LogPrintAction = new ActionParamsClass_LogPrintAction();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_LogPrintAction LogPrintActionParams { get { return s_params_LogPrintAction; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_LogPrintAction
        {
            public readonly string orderId = "orderId";
            public readonly string actionType = "actionType";
        }
        static readonly ActionParamsClass_ApproveDiscounts s_params_ApproveDiscounts = new ActionParamsClass_ApproveDiscounts();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_ApproveDiscounts ApproveDiscountsParams { get { return s_params_ApproveDiscounts; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_ApproveDiscounts
        {
            public readonly string orderData = "orderData";
            public readonly string username = "username";
            public readonly string password = "password";
            public readonly string remarks = "remarks";
            public readonly string orderId = "orderId";
        }
        static readonly ActionParamsClass_LoadCountryListItem s_params_LoadCountryListItem = new ActionParamsClass_LoadCountryListItem();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_LoadCountryListItem LoadCountryListItemParams { get { return s_params_LoadCountryListItem; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_LoadCountryListItem
        {
            public readonly string id = "id";
        }
        static readonly ActionParamsClass_LoadStateListItem s_params_LoadStateListItem = new ActionParamsClass_LoadStateListItem();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_LoadStateListItem LoadStateListItemParams { get { return s_params_LoadStateListItem; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_LoadStateListItem
        {
            public readonly string id = "id";
        }
        static readonly ActionParamsClass_LoadCityListItem s_params_LoadCityListItem = new ActionParamsClass_LoadCityListItem();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_LoadCityListItem LoadCityListItemParams { get { return s_params_LoadCityListItem; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_LoadCityListItem
        {
            public readonly string id = "id";
        }
        static readonly ActionParamsClass_Delete s_params_Delete = new ActionParamsClass_Delete();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_Delete DeleteParams { get { return s_params_Delete; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_Delete
        {
            public readonly string id = "id";
        }
        static readonly ActionParamsClass_SubmitOrder s_params_SubmitOrder = new ActionParamsClass_SubmitOrder();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_SubmitOrder SubmitOrderParams { get { return s_params_SubmitOrder; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_SubmitOrder
        {
            public readonly string data = "data";
        }
        static readonly ActionParamsClass_SubmitScannedItems s_params_SubmitScannedItems = new ActionParamsClass_SubmitScannedItems();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_SubmitScannedItems SubmitScannedItemsParams { get { return s_params_SubmitScannedItems; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_SubmitScannedItems
        {
            public readonly string data = "data";
        }
        static readonly ActionParamsClass_SubmitReturnedItems s_params_SubmitReturnedItems = new ActionParamsClass_SubmitReturnedItems();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_SubmitReturnedItems SubmitReturnedItemsParams { get { return s_params_SubmitReturnedItems; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_SubmitReturnedItems
        {
            public readonly string data = "data";
        }
        static readonly ActionParamsClass_SubmitOrderScanned s_params_SubmitOrderScanned = new ActionParamsClass_SubmitOrderScanned();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_SubmitOrderScanned SubmitOrderScannedParams { get { return s_params_SubmitOrderScanned; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_SubmitOrderScanned
        {
            public readonly string serialNo = "serialNo";
            public readonly string orderItem_Id = "orderItem_Id";
            public readonly string scannedQty = "scannedQty";
        }
        static readonly ActionParamsClass_UpdateOrder s_params_UpdateOrder = new ActionParamsClass_UpdateOrder();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_UpdateOrder UpdateOrderParams { get { return s_params_UpdateOrder; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_UpdateOrder
        {
            public readonly string data = "data";
        }
        static readonly ActionParamsClass_UpdateOrderStatus s_params_UpdateOrderStatus = new ActionParamsClass_UpdateOrderStatus();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_UpdateOrderStatus UpdateOrderStatusParams { get { return s_params_UpdateOrderStatus; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_UpdateOrderStatus
        {
            public readonly string orderId = "orderId";
            public readonly string newStatus = "newStatus";
            public readonly string actionName = "actionName";
            public readonly string remarks = "remarks";
        }
        static readonly ActionParamsClass_UpdateOrderPayments s_params_UpdateOrderPayments = new ActionParamsClass_UpdateOrderPayments();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_UpdateOrderPayments UpdateOrderPaymentsParams { get { return s_params_UpdateOrderPayments; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_UpdateOrderPayments
        {
            public readonly string data = "data";
        }
        static readonly ActionParamsClass_PostOrderToApi s_params_PostOrderToApi = new ActionParamsClass_PostOrderToApi();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_PostOrderToApi PostOrderToApiParams { get { return s_params_PostOrderToApi; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_PostOrderToApi
        {
            public readonly string orderId = "orderId";
        }
        static readonly ActionParamsClass_Picking s_params_Picking = new ActionParamsClass_Picking();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_Picking PickingParams { get { return s_params_Picking; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_Picking
        {
            public readonly string id = "id";
        }
        static readonly ActionParamsClass_GetOrderLog s_params_GetOrderLog = new ActionParamsClass_GetOrderLog();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_GetOrderLog GetOrderLogParams { get { return s_params_GetOrderLog; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_GetOrderLog
        {
            public readonly string orderId = "orderId";
        }
        static readonly ActionParamsClass_PrintDocument s_params_PrintDocument = new ActionParamsClass_PrintDocument();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_PrintDocument PrintDocumentParams { get { return s_params_PrintDocument; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_PrintDocument
        {
            public readonly string id = "id";
            public readonly string letterName = "letterName";
            public readonly string watermark = "watermark";
        }
        static readonly ViewsClass s_views = new ViewsClass();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ViewsClass Views { get { return s_views; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ViewsClass
        {
            static readonly _ViewNamesClass s_ViewNames = new _ViewNamesClass();
            public _ViewNamesClass ViewNames { get { return s_ViewNames; } }
            public class _ViewNamesClass
            {
                public readonly string _OrderSearchPanel = "_OrderSearchPanel";
                public readonly string _SearchPanel = "_SearchPanel";
                public readonly string Create = "Create";
                public readonly string CustomerBrowse = "CustomerBrowse";
                public readonly string Index = "Index";
                public readonly string Picking = "Picking";
                public readonly string RenderAction = "RenderAction";
                public readonly string ReturnOrder = "ReturnOrder";
                public readonly string ViewOrder___Copy = "ViewOrder - Copy";
                public readonly string ViewOrder = "ViewOrder";
            }
            public readonly string _OrderSearchPanel = "~/Views/Orders/_OrderSearchPanel.cshtml";
            public readonly string _SearchPanel = "~/Views/Orders/_SearchPanel.cshtml";
            public readonly string Create = "~/Views/Orders/Create.cshtml";
            public readonly string CustomerBrowse = "~/Views/Orders/CustomerBrowse.cshtml";
            public readonly string Index = "~/Views/Orders/Index.cshtml";
            public readonly string Picking = "~/Views/Orders/Picking.cshtml";
            public readonly string RenderAction = "~/Views/Orders/RenderAction.cshtml";
            public readonly string ReturnOrder = "~/Views/Orders/ReturnOrder.cshtml";
            public readonly string ViewOrder___Copy = "~/Views/Orders/ViewOrder - Copy.cshtml";
            public readonly string ViewOrder = "~/Views/Orders/ViewOrder.cshtml";
        }
    }

    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public partial class T4MVC_OrdersController : Hanodale.WebUI.Controllers.OrdersController
    {
        public T4MVC_OrdersController() : base(Dummy.Instance) { }

        [NonAction]
        partial void IndexOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, string id, bool readOnly);

        [NonAction]
        public override System.Web.Mvc.ActionResult Index(string id, bool readOnly)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Index);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "id", id);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "readOnly", readOnly);
            IndexOverride(callInfo, id, readOnly);
            return callInfo;
        }

        [NonAction]
        partial void BindOrdersOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, Hanodale.WebUI.Models.DataTableModel param, string myKey);

        [NonAction]
        public override System.Web.Mvc.ActionResult BindOrders(Hanodale.WebUI.Models.DataTableModel param, string myKey)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.BindOrders);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "param", param);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "myKey", myKey);
            BindOrdersOverride(callInfo, param, myKey);
            return callInfo;
        }

        [NonAction]
        partial void UpdateCountOverride(T4MVC_System_Web_Mvc_ActionResult callInfo);

        [NonAction]
        public override System.Web.Mvc.ActionResult UpdateCount()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.UpdateCount);
            UpdateCountOverride(callInfo);
            return callInfo;
        }

        [NonAction]
        partial void RenderActionOverride(T4MVC_System_Web_Mvc_JsonResult callInfo, bool readOnly);

        [NonAction]
        public override System.Web.Mvc.JsonResult RenderAction(bool readOnly)
        {
            var callInfo = new T4MVC_System_Web_Mvc_JsonResult(Area, Name, ActionNames.RenderAction);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "readOnly", readOnly);
            RenderActionOverride(callInfo, readOnly);
            return callInfo;
        }

        [NonAction]
        partial void CustomerBrowseOverride(T4MVC_System_Web_Mvc_ActionResult callInfo);

        [NonAction]
        public override System.Web.Mvc.ActionResult CustomerBrowse()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.CustomerBrowse);
            CustomerBrowseOverride(callInfo);
            return callInfo;
        }

        [NonAction]
        partial void CreateOverride(T4MVC_System_Web_Mvc_JsonResult callInfo, string id);

        [NonAction]
        public override System.Web.Mvc.JsonResult Create(string id)
        {
            var callInfo = new T4MVC_System_Web_Mvc_JsonResult(Area, Name, ActionNames.Create);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "id", id);
            CreateOverride(callInfo, id);
            return callInfo;
        }

        [NonAction]
        partial void SaveOrderOverride(T4MVC_System_Web_Mvc_JsonResult callInfo, Hanodale.WebUI.Models.OrderModel model);

        [NonAction]
        public override System.Web.Mvc.JsonResult SaveOrder(Hanodale.WebUI.Models.OrderModel model)
        {
            var callInfo = new T4MVC_System_Web_Mvc_JsonResult(Area, Name, ActionNames.SaveOrder);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "model", model);
            SaveOrderOverride(callInfo, model);
            return callInfo;
        }

        [NonAction]
        partial void EditOverride(T4MVC_System_Web_Mvc_JsonResult callInfo, string id, bool readOnly);

        [NonAction]
        public override System.Web.Mvc.JsonResult Edit(string id, bool readOnly)
        {
            var callInfo = new T4MVC_System_Web_Mvc_JsonResult(Area, Name, ActionNames.Edit);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "id", id);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "readOnly", readOnly);
            EditOverride(callInfo, id, readOnly);
            return callInfo;
        }

        [NonAction]
        partial void CloneOrderOverride(T4MVC_System_Web_Mvc_JsonResult callInfo, string id, bool readOnly);

        [NonAction]
        public override System.Web.Mvc.JsonResult CloneOrder(string id, bool readOnly)
        {
            var callInfo = new T4MVC_System_Web_Mvc_JsonResult(Area, Name, ActionNames.CloneOrder);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "id", id);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "readOnly", readOnly);
            CloneOrderOverride(callInfo, id, readOnly);
            return callInfo;
        }

        [NonAction]
        partial void ReturnOrderOverride(T4MVC_System_Web_Mvc_JsonResult callInfo, string id, bool readOnly);

        [NonAction]
        public override System.Web.Mvc.JsonResult ReturnOrder(string id, bool readOnly)
        {
            var callInfo = new T4MVC_System_Web_Mvc_JsonResult(Area, Name, ActionNames.ReturnOrder);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "id", id);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "readOnly", readOnly);
            ReturnOrderOverride(callInfo, id, readOnly);
            return callInfo;
        }

        [NonAction]
        partial void GetUsersListOverride(T4MVC_System_Web_Mvc_JsonResult callInfo);

        [NonAction]
        public override System.Web.Mvc.JsonResult GetUsersList()
        {
            var callInfo = new T4MVC_System_Web_Mvc_JsonResult(Area, Name, ActionNames.GetUsersList);
            GetUsersListOverride(callInfo);
            return callInfo;
        }

        [NonAction]
        partial void CheckBulkDiscountApprovalOverride(T4MVC_System_Web_Mvc_JsonResult callInfo, System.Collections.Generic.List<Hanodale.WebUI.Controllers.OrdersController.DiscountApprovalRequest> items);

        [NonAction]
        public override System.Web.Mvc.JsonResult CheckBulkDiscountApproval(System.Collections.Generic.List<Hanodale.WebUI.Controllers.OrdersController.DiscountApprovalRequest> items)
        {
            var callInfo = new T4MVC_System_Web_Mvc_JsonResult(Area, Name, ActionNames.CheckBulkDiscountApproval);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "items", items);
            CheckBulkDiscountApprovalOverride(callInfo, items);
            return callInfo;
        }

        [NonAction]
        partial void GetDiscountApprovalByOrderOverride(T4MVC_System_Web_Mvc_JsonResult callInfo, int? orderId);

        [NonAction]
        public override System.Web.Mvc.JsonResult GetDiscountApprovalByOrder(int? orderId)
        {
            var callInfo = new T4MVC_System_Web_Mvc_JsonResult(Area, Name, ActionNames.GetDiscountApprovalByOrder);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "orderId", orderId);
            GetDiscountApprovalByOrderOverride(callInfo, orderId);
            return callInfo;
        }

        [NonAction]
        partial void CheckItemReturnStatusOverride(T4MVC_System_Web_Mvc_JsonResult callInfo, int orderId);

        [NonAction]
        public override System.Web.Mvc.JsonResult CheckItemReturnStatus(int orderId)
        {
            var callInfo = new T4MVC_System_Web_Mvc_JsonResult(Area, Name, ActionNames.CheckItemReturnStatus);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "orderId", orderId);
            CheckItemReturnStatusOverride(callInfo, orderId);
            return callInfo;
        }

        [NonAction]
        partial void CheckPrintRefundStatusOverride(T4MVC_System_Web_Mvc_JsonResult callInfo, int orderId);

        [NonAction]
        public override System.Web.Mvc.JsonResult CheckPrintRefundStatus(int orderId)
        {
            var callInfo = new T4MVC_System_Web_Mvc_JsonResult(Area, Name, ActionNames.CheckPrintRefundStatus);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "orderId", orderId);
            CheckPrintRefundStatusOverride(callInfo, orderId);
            return callInfo;
        }

        [NonAction]
        partial void LogPrintActionOverride(T4MVC_System_Web_Mvc_JsonResult callInfo, int orderId, string actionType);

        [NonAction]
        public override System.Web.Mvc.JsonResult LogPrintAction(int orderId, string actionType)
        {
            var callInfo = new T4MVC_System_Web_Mvc_JsonResult(Area, Name, ActionNames.LogPrintAction);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "orderId", orderId);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "actionType", actionType);
            LogPrintActionOverride(callInfo, orderId, actionType);
            return callInfo;
        }

        [NonAction]
        partial void ApproveDiscountsOverride(T4MVC_System_Web_Mvc_JsonResult callInfo, System.Collections.Generic.List<Hanodale.Entity.Core.OrderItems> orderData, string username, string password, string remarks, string orderId);

        [NonAction]
        public override System.Web.Mvc.JsonResult ApproveDiscounts(System.Collections.Generic.List<Hanodale.Entity.Core.OrderItems> orderData, string username, string password, string remarks, string orderId)
        {
            var callInfo = new T4MVC_System_Web_Mvc_JsonResult(Area, Name, ActionNames.ApproveDiscounts);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "orderData", orderData);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "username", username);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "password", password);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "remarks", remarks);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "orderId", orderId);
            ApproveDiscountsOverride(callInfo, orderData, username, password, remarks, orderId);
            return callInfo;
        }

        [NonAction]
        partial void LoadCountryListItemOverride(T4MVC_System_Web_Mvc_JsonResult callInfo, int id);

        [NonAction]
        public override System.Web.Mvc.JsonResult LoadCountryListItem(int id)
        {
            var callInfo = new T4MVC_System_Web_Mvc_JsonResult(Area, Name, ActionNames.LoadCountryListItem);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "id", id);
            LoadCountryListItemOverride(callInfo, id);
            return callInfo;
        }

        [NonAction]
        partial void LoadStateListItemOverride(T4MVC_System_Web_Mvc_JsonResult callInfo, int id);

        [NonAction]
        public override System.Web.Mvc.JsonResult LoadStateListItem(int id)
        {
            var callInfo = new T4MVC_System_Web_Mvc_JsonResult(Area, Name, ActionNames.LoadStateListItem);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "id", id);
            LoadStateListItemOverride(callInfo, id);
            return callInfo;
        }

        [NonAction]
        partial void LoadCityListItemOverride(T4MVC_System_Web_Mvc_JsonResult callInfo, int id);

        [NonAction]
        public override System.Web.Mvc.JsonResult LoadCityListItem(int id)
        {
            var callInfo = new T4MVC_System_Web_Mvc_JsonResult(Area, Name, ActionNames.LoadCityListItem);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "id", id);
            LoadCityListItemOverride(callInfo, id);
            return callInfo;
        }

        [NonAction]
        partial void DeleteOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, string id);

        [NonAction]
        public override System.Web.Mvc.ActionResult Delete(string id)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Delete);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "id", id);
            DeleteOverride(callInfo, id);
            return callInfo;
        }

        [NonAction]
        partial void SubmitOrderOverride(T4MVC_System_Web_Mvc_JsonResult callInfo, Hanodale.WebUI.Models.SubmitOrderModel data);

        [NonAction]
        public override System.Web.Mvc.JsonResult SubmitOrder(Hanodale.WebUI.Models.SubmitOrderModel data)
        {
            var callInfo = new T4MVC_System_Web_Mvc_JsonResult(Area, Name, ActionNames.SubmitOrder);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "data", data);
            SubmitOrderOverride(callInfo, data);
            return callInfo;
        }

        [NonAction]
        partial void SubmitScannedItemsOverride(T4MVC_System_Web_Mvc_JsonResult callInfo, Hanodale.WebUI.Models.SubmitOrderScanModel data);

        [NonAction]
        public override System.Web.Mvc.JsonResult SubmitScannedItems(Hanodale.WebUI.Models.SubmitOrderScanModel data)
        {
            var callInfo = new T4MVC_System_Web_Mvc_JsonResult(Area, Name, ActionNames.SubmitScannedItems);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "data", data);
            SubmitScannedItemsOverride(callInfo, data);
            return callInfo;
        }

        [NonAction]
        partial void SubmitReturnedItemsOverride(T4MVC_System_Web_Mvc_JsonResult callInfo, Hanodale.WebUI.Models.SubmitReturnedModel data);

        [NonAction]
        public override System.Web.Mvc.JsonResult SubmitReturnedItems(Hanodale.WebUI.Models.SubmitReturnedModel data)
        {
            var callInfo = new T4MVC_System_Web_Mvc_JsonResult(Area, Name, ActionNames.SubmitReturnedItems);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "data", data);
            SubmitReturnedItemsOverride(callInfo, data);
            return callInfo;
        }

        [NonAction]
        partial void SubmitOrderScannedOverride(T4MVC_System_Web_Mvc_JsonResult callInfo, string serialNo, int orderItem_Id, decimal scannedQty);

        [NonAction]
        public override System.Web.Mvc.JsonResult SubmitOrderScanned(string serialNo, int orderItem_Id, decimal scannedQty)
        {
            var callInfo = new T4MVC_System_Web_Mvc_JsonResult(Area, Name, ActionNames.SubmitOrderScanned);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "serialNo", serialNo);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "orderItem_Id", orderItem_Id);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "scannedQty", scannedQty);
            SubmitOrderScannedOverride(callInfo, serialNo, orderItem_Id, scannedQty);
            return callInfo;
        }

        [NonAction]
        partial void UpdateOrderOverride(T4MVC_System_Web_Mvc_JsonResult callInfo, Hanodale.WebUI.Models.UpdateOrderModel data);

        [NonAction]
        public override System.Web.Mvc.JsonResult UpdateOrder(Hanodale.WebUI.Models.UpdateOrderModel data)
        {
            var callInfo = new T4MVC_System_Web_Mvc_JsonResult(Area, Name, ActionNames.UpdateOrder);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "data", data);
            UpdateOrderOverride(callInfo, data);
            return callInfo;
        }

        [NonAction]
        partial void UpdateOrderStatusOverride(T4MVC_System_Web_Mvc_JsonResult callInfo, int orderId, string newStatus, string actionName, string remarks);

        [NonAction]
        public override System.Web.Mvc.JsonResult UpdateOrderStatus(int orderId, string newStatus, string actionName, string remarks)
        {
            var callInfo = new T4MVC_System_Web_Mvc_JsonResult(Area, Name, ActionNames.UpdateOrderStatus);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "orderId", orderId);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "newStatus", newStatus);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "actionName", actionName);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "remarks", remarks);
            UpdateOrderStatusOverride(callInfo, orderId, newStatus, actionName, remarks);
            return callInfo;
        }

        [NonAction]
        partial void UpdateOrderPaymentsOverride(T4MVC_System_Web_Mvc_JsonResult callInfo, Hanodale.WebUI.Models.UpdateOrderPayments data);

        [NonAction]
        public override System.Web.Mvc.JsonResult UpdateOrderPayments(Hanodale.WebUI.Models.UpdateOrderPayments data)
        {
            var callInfo = new T4MVC_System_Web_Mvc_JsonResult(Area, Name, ActionNames.UpdateOrderPayments);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "data", data);
            UpdateOrderPaymentsOverride(callInfo, data);
            return callInfo;
        }

        [NonAction]
        partial void PostOrderToApiOverride(T4MVC_System_Web_Mvc_JsonResult callInfo, int orderId);

        [NonAction]
        public override System.Web.Mvc.JsonResult PostOrderToApi(int orderId)
        {
            var callInfo = new T4MVC_System_Web_Mvc_JsonResult(Area, Name, ActionNames.PostOrderToApi);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "orderId", orderId);
            PostOrderToApiOverride(callInfo, orderId);
            return callInfo;
        }

        [NonAction]
        partial void PickingOverride(T4MVC_System_Web_Mvc_JsonResult callInfo, string id);

        [NonAction]
        public override System.Web.Mvc.JsonResult Picking(string id)
        {
            var callInfo = new T4MVC_System_Web_Mvc_JsonResult(Area, Name, ActionNames.Picking);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "id", id);
            PickingOverride(callInfo, id);
            return callInfo;
        }

        [NonAction]
        partial void GetOrderLogOverride(T4MVC_System_Web_Mvc_JsonResult callInfo, int orderId);

        [NonAction]
        public override System.Web.Mvc.JsonResult GetOrderLog(int orderId)
        {
            var callInfo = new T4MVC_System_Web_Mvc_JsonResult(Area, Name, ActionNames.GetOrderLog);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "orderId", orderId);
            GetOrderLogOverride(callInfo, orderId);
            return callInfo;
        }

        [NonAction]
        partial void SyncAllOrdersOverride(T4MVC_System_Web_Mvc_ActionResult callInfo);

        [NonAction]
        public override System.Web.Mvc.ActionResult SyncAllOrders()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.SyncAllOrders);
            SyncAllOrdersOverride(callInfo);
            return callInfo;
        }

        [NonAction]
        partial void PrintDocumentOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, string id, string letterName, string watermark);

        [NonAction]
        public override System.Web.Mvc.ActionResult PrintDocument(string id, string letterName, string watermark)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.PrintDocument);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "id", id);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "letterName", letterName);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "watermark", watermark);
            PrintDocumentOverride(callInfo, id, letterName, watermark);
            return callInfo;
        }

        [NonAction]
        partial void GetCustomSearchPanelOverride(T4MVC_System_Web_Mvc_ActionResult callInfo);

        [NonAction]
        public override System.Web.Mvc.ActionResult GetCustomSearchPanel()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.GetCustomSearchPanel);
            GetCustomSearchPanelOverride(callInfo);
            return callInfo;
        }

    }
}

#endregion T4MVC
#pragma warning restore 1591
